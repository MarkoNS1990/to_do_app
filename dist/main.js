(()=>{"use strict";(()=>{const t=document.querySelector(".addBtn");t&&t.addEventListener("click",(()=>{const t=document.querySelector(".card-body"),e=document.createElement("input");e.classList.add("form-control"),t.appendChild(e),console.log("ffsf")}))})();var t,e=new Uint8Array(16);function n(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(e)}const o=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,a=function(t){return"string"==typeof t&&o.test(t)};for(var r=[],s=0;s<256;++s)r.push((s+256).toString(16).substr(1));const d=function(t,e,o){var s=(t=t||{}).random||(t.rng||n)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,e){o=o||0;for(var d=0;d<16;++d)e[o+d]=s[d];return e}return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(r[t[e+0]]+r[t[e+1]]+r[t[e+2]]+r[t[e+3]]+"-"+r[t[e+4]]+r[t[e+5]]+"-"+r[t[e+6]]+r[t[e+7]]+"-"+r[t[e+8]]+r[t[e+9]]+"-"+r[t[e+10]]+r[t[e+11]]+r[t[e+12]]+r[t[e+13]]+r[t[e+14]]+r[t[e+15]]).toLowerCase();if(!a(n))throw TypeError("Stringified UUID is invalid");return n}(s)};let c=[];class i{constructor(t){this.name=t,this.tasks=[],this.id=d()}}class u{constructor(t,e,n){this.name=t,this.date=e,this.priority=n,this.id=d()}}(()=>{const t=document.querySelector("#content"),e=document.createElement("input"),n=document.createElement("button");e.classList.add("form-control"),n.classList.add("btn","btn-primary"),n.innerText="Add Project",t.appendChild(e),t.appendChild(n),n.addEventListener("click",(()=>{const n=new i(e.value);c.push(n);const o=document.createElement("div");o.classList.add("card");const a=d();c.forEach((t=>{o.innerHTML=`\n            <div class='card-title'>\n                ${t.name}\n                <button class='btn btn-success addBtn' data=${n.id}>Add</button>\n            </div>\n            <div class='card-body' data=${a}>\n                \n            </div>\n            \n        `})),t.appendChild(o),e.value="";const r=document.querySelector(`[data='${n.id}']`);r.addEventListener("click",(()=>{console.log(r),console.log(n);const t=d(),e=d(),o=d(),s=d(),c=document.querySelector(`[data='${a}']`);c.innerHTML=`\n            <form type='submit'>   \n            <input type='text' placeholder='enter a task' class='form-control taskInput' data=${e}>\n                <input type='date' class='dateInput' data=${s}> \n                <select name='priority' class='priority' data=${o}>\n                    <option value='low'>Low</option>\n                    <option value='high'>High</option>\n                </select> \n            <button type ='submit' class='btn btn-secondary submitForm' data=${t}>Submit</button>\n            </form> \n            `;const i=document.querySelector(`[data='${t}']`),p=document.querySelector(`[data='${e}']`),m=document.querySelector(`[data='${o}']`),y=document.querySelector(`[data='${s}']`);i.addEventListener("click",(t=>{t.preventDefault();const e=new u(p.value,y.value,m.value);n.tasks.push(e),l(p,y,m,i),n.tasks.forEach((t=>{c.innerHTML+=`\n                    <p class='card-item'>${t.name} ${t.date} ${t.priority}</p>\n                `}))}))}))}))})();const l=(t,e,n,o)=>{t.style.display="none",e.style.display="none",n.style.display="none",o.style.display="none"}})();