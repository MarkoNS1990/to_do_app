(()=>{"use strict";(()=>{const t=document.querySelector(".addBtn");t&&t.addEventListener("click",(()=>{const t=document.querySelector(".card-body"),e=document.createElement("input");e.classList.add("form-control"),t.appendChild(e),console.log("ffsf")}))})();var t,e=new Uint8Array(16);function n(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(e)}const a=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,o=function(t){return"string"==typeof t&&a.test(t)};for(var s=[],r=0;r<256;++r)s.push((r+256).toString(16).substr(1));const d=function(t,e,a){var r=(t=t||{}).random||(t.rng||n)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,e){a=a||0;for(var d=0;d<16;++d)e[a+d]=r[d];return e}return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(s[t[e+0]]+s[t[e+1]]+s[t[e+2]]+s[t[e+3]]+"-"+s[t[e+4]]+s[t[e+5]]+"-"+s[t[e+6]]+s[t[e+7]]+"-"+s[t[e+8]]+s[t[e+9]]+"-"+s[t[e+10]]+s[t[e+11]]+s[t[e+12]]+s[t[e+13]]+s[t[e+14]]+s[t[e+15]]).toLowerCase();if(!o(n))throw TypeError("Stringified UUID is invalid");return n}(r)};class c{constructor(t){this.name=t,this.tasks=[],this.head_id=d(),this.body_id=d()}}class l{constructor(t,e,n){this.name=t,this.date=e,this.priority=n,this.id=d(),this.completed=!1}}(()=>{const t=document.querySelector("#content"),e=document.createElement("input"),n=document.createElement("button"),a=document.createElement("div");a.classList.add("d-flex"),a.appendChild(n),a.appendChild(e),e.classList.add("form-control"),e.placeholder="Enter project name",n.classList.add("btn","btn-primary","my-button"),n.innerText="+",t.appendChild(a),n.addEventListener("click",(()=>{if(""==e.value)alert("Put the project name please");else{const n=new c(e.value);(t=>{let e;e=null===localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects")),e.push(t),localStorage.setItem("projects",JSON.stringify(e))})(n);const a=JSON.parse(localStorage.getItem("projects")),o=document.createElement("div");o.classList.add("card");const s=d();a.forEach((t=>{o.innerHTML=`\n            <div class='card-title'>\n               <p class='heading'>Project name: ${t.name}</p> \n                <button class='btn btn-success addBtn' data=${n.head_id}>Add task</button>\n            </div>\n            <div class='card-body' data=${s}>\n                \n            </div>\n            \n        `})),t.appendChild(o),e.value="",document.querySelector(`[data='${n.head_id}']`).addEventListener("click",(t=>{const e=d(),o=d(),r=d(),c=d(),u=document.querySelector(`[data='${s}']`);u.innerHTML=`\n            <form type='submit'>\n                  \n                <input type='text' placeholder='enter a task' class='form-control taskInput' data=${o}>\n                <input type='date' class='dateInput' data=${c}> \n                <select name='priority' class='priority' data=${r}>\n                    <option value='low'>Low</option>\n                    <option value='high'>High</option>\n                </select> \n            <button type ='submit' class='btn btn-secondary submitForm' data=${e}>Submit</button>\n            </form> \n            `;const p=document.querySelector(`[data='${e}']`),m=document.querySelector(`[data='${o}']`),y=document.querySelector(`[data='${r}']`),f=document.querySelector(`[data='${c}']`);p.addEventListener("click",(t=>{if(t.preventDefault(),""===m.value||""===f.value)alert("Please fill in all fields"),console.log("ffs");else{const t=new l(m.value,f.value,y.value);console.log(a),a.forEach((e=>{if(e.head_id==n.head_id){((t,e)=>{const n=JSON.parse(localStorage.getItem("projects"));n.forEach((a=>{if(e.head_id===a.head_id){e.tasks.push(t),console.log(e);const a=[...n];a.push(e),localStorage.clear(),localStorage.setItem("projects",JSON.stringify(a))}}))})(t,n),i(m,f,y,p);const e=d();n.tasks.forEach((t=>{u.innerHTML+=`\n                        <div class='card-item' data=${e}>${t.name} | Due date: ${t.date} | priority: ${t.priority}<button class='btn btn-danger deleteBtn' data=${t.id}>Delete</button></div>\n                    `})),document.querySelectorAll(".deleteBtn").forEach((e=>{console.log(e),e.addEventListener("click",(e=>{console.log(e.target);const a=n.tasks.indexOf(t);n.tasks.splice(a,1),e.target.parentElement.remove()}))}))}}))}}))}))}}))})();const i=(t,e,n,a)=>{t.style.display="none",e.style.display="none",n.style.display="none",a.style.display="none"}})();